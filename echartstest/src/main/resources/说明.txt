-----------------1、配置文件-----------------------------------------------------------
1、首先配置配置文件
	1.1、在src下建立sqlMapConfig.xml
		--1.1.1、配置别名
		--1.1.2、加载com.supconit.zhyy.person.mapper.PersonMapper.xml
	1.2、在com.supconit.zhyy.person.mapper包下建立PersonMapper.xml
		--内容。。。
	1.3、在src下建立beans.xml
		1.3.1、自动扫描<context:component-scan base-package="com.shaye"/>
		1.3.2、数据源(DriverManagerDataSource)
			--url、username、password
		1.3.3、SqlSessionFactory(是由spring和mybatis做整合提供的)
			--依赖数据源
			--加载sqlMapConfig.xml
		1.3.4、事务管理器DataSourceTransactionManager(是由spring提供的事务管理器)
			--依赖数据源
		1.3.5、通知
			--通知管理事务管理器
		1.3.5、切面
			--切面=通知+切点
	1.4、在src下建立springmvc.xml
		--1.4.1、扫描<context:component-scan base-package="com.supconit.zhyy.person.controller"/>
		--1.4.2、配置视图解析器InternalResourceViewResolver
	1.5、修改web.xml
		--1.5.1、加载spring的beans.xml(用ContextLoaderListener)
		--1.5.2、加载springmvc.xml
		--1.5.3、编码转换(用)
-----------------2、代码-----------------------------------------------------------
2、写代码--dao-daoImpl、service-serviceImpl、controller
	2.1、dao
		2.1.1、dao下建五个接口
			public interface PersonDao {
				public void savePeson(Person person);
				public void updatePerson(Person person);
				public Person getPersonById(int personId);
				public void deletePerson(int personId);
				public List<Person> selectPersonByCondition(QueryCondition qc);
			}
			***注意：新建Person.java和QueryCondition.java类在com.supconit.zhyy.person.model
		2.1.2、daoImpl
			--继承SqlSessionDaoSupport、实现dao接口
			内容如下：
			@Repository
			public class PersonDaoImpl extends SqlSessionDaoSupport implements PersonDao {
				String ns = "com.supconit.zhyy.person.mapper.PersonMapper.";
				public void savePeson(Person person) {
					this.getSqlSession().insert(ns + "insert", person);
				}
				...dao接口中的方法.省略掉了...
			}
	2.2、service
		2.2.1、service
			--内容和dao是一样的
		2.2.2、serviceImpl
			--注入Dao接口
	2.3、controller
		--注入service接口
		--增删改查方法
		****注意：
			1、查询时要进行回显，用Model回显给页面
			2、接受页面日期要进行转换
				@InitBinder
				public void initBinder(ServletRequestDataBinder binder) {
					binder.registerCustomEditor(Date.class, new CustomDateEditor(
							new SimpleDateFormat("yyyy-MM-dd"), true));
				}			
-----------------3、页面书写-----------------------------------------------------------						
3、写页面jsp/list.jsp
	3.1、列表显示
		--内容。。。
	3.2、添加
		--在list.jsp页面增加个add按钮，跳转到add.jsp页面
	3.3、修改
		--在list.jsp页面添加个update按钮，跳转到update.jsp页面
		注意：要添加隐藏域
	3.4、删除
		注意：添加确认删除！
		<a href="javascript:void(0);" onclick="deletePerson(${person.personId})">删除</a></td>
		function deletePerson(personId){
			if(confirm("确认要删除吗?")){
				window.location.href = "person/delete.do?personId="+personId;
			}
		}
	3.5、批量删除
		--引入jquery
		1、全选，全不选
			选择table下的input框，判断哪个是选中的
		2、确认删除
			
				
						
		